{"version":3,"sources":["app/components/SiteHeader.tsx","app/pages/Home.tsx","app/components/VersionLabels.tsx","app/components/TimelineVersion.tsx","app/data/VersionData.ts","app/data/LabelsData.ts","app/pages/Versions.tsx","app/pages/Packages.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SiteHeader","Item","Link","href","fontSize","icon","RocketIcon","size","mr","full","HomeIcon","TagIcon","PackageIcon","MarkGithubIcon","Home","padding","gridGap","gridTemplateColumns","gridTemplateRows","target","variant","bg","m","VersionLabels","props","version","labels","latest","recommended","bleeding","TimelineVersion","color","type","ZapIcon","MilestoneIcon","BeakerIcon","Badge","Body","fontWeight","muted","DownloadIcon","direction","aria-label","publish","toISOString","toLocaleDateString","navigator","language","year","month","day","md5","Math","round","VersionData","this","LabelsData","getTypeForVersion","undefined","mapVersionsToTimelineItem","versions","map","value","Versions","React","useState","items","setItems","setLabels","useEffect","itemsTemp","tempLabels","fetch","then","res","json","forEach","item","push","Date","reverse","clipSidebar","Packages","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bd45573.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Header, StyledOcticon } from \"@primer/components\";\r\nimport {HomeIcon, MarkGithubIcon, PackageIcon, RocketIcon, TagIcon} from \"@primer/octicons-react\";\r\n\r\nconst SiteHeader: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Header.Item>\r\n                    <Header.Link href=\"#/\" fontSize={2}>\r\n                        <StyledOcticon icon={RocketIcon} size={32} mr={2}/>\r\n                        <span>Discord Game Sdk</span>\r\n                    </Header.Link>\r\n                </Header.Item>\r\n                <Header.Item full />\r\n                <Header.Item>\r\n                    <Header.Link href=\"#/\" fontSize={2}>\r\n                        <StyledOcticon icon={HomeIcon} size={16} mr={2}/>\r\n                        <span>Home</span>\r\n                    </Header.Link>\r\n                </Header.Item>\r\n                <Header.Item>\r\n                    <Header.Link href=\"#/versions\" fontSize={2}>\r\n                        <StyledOcticon icon={TagIcon} size={16} mr={2}/>\r\n                        <span>Versions</span>\r\n                    </Header.Link>\r\n                </Header.Item>\r\n                <Header.Item>\r\n                    <Header.Link href=\"#/packages\" fontSize={2}>\r\n                        <StyledOcticon icon={PackageIcon} size={16} mr={2}/>\r\n                        <span>Packages</span>\r\n                    </Header.Link>\r\n                </Header.Item>\r\n                <Header.Item>\r\n                    <Header.Link href=\"https://github.com/joezwet/discord.joezwet.dev\" fontSize={2}>\r\n                        <StyledOcticon icon={MarkGithubIcon} size={16} mr={2}/>\r\n                        <span>Source</span>\r\n                    </Header.Link>\r\n                </Header.Item>\r\n            </Header>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SiteHeader;","import React from \"react\";\r\nimport SiteHeader from \"../components/SiteHeader\";\r\nimport {Box, BranchName, Grid, Heading, Label, Link, Pagehead} from \"@primer/components\";\r\n\r\nconst Home: React.FC = () => {\r\n    return (\r\n      <>\r\n        <SiteHeader />\r\n        <Grid padding={40} gridGap={3} gridTemplateColumns=\"20% auto 20%\" gridTemplateRows=\"auto\">\r\n          <Box />\r\n          <Box>\r\n            <Pagehead><Heading>About</Heading></Pagehead>\r\n            <p>This website is an unofficial listing of known <Link href=\"https://discord.com/developers/docs/game-sdk/getting-started\" target=\"_blank\">\r\n              Discord Game Sdk</Link> versions.\r\n              The versions list was last checked for updates on the 30th of March 2021, at 10:19pm NZST.\r\n              <br/><br/>\r\n              An explanation of tags:\r\n              <ul>\r\n                <li><Label variant=\"medium\" bg=\"#6f42c1\" m={1}>Latest</Label> This tag represents the version listed by Discord as latest, indicated by using <BranchName>latest</BranchName> in the download url.</li>\r\n                <li><Label key=\"recommended\" variant=\"medium\" bg=\"#28a745\" m={1}>Recommended</Label> This is the version recommended for use by Discord, check the <BranchName>#gamesdk-and-dispatch-announcements</BranchName> channel in the Discord Developers server for more info.</li>\r\n                <li><Label key=\"bleeding\" variant=\"medium\" bg=\"#d73a49\" m={1}>Bleeding Edge</Label> This is the absolute latest version, found by querying versions incrementally till no more can be found.</li>\r\n              </ul>\r\n            </p>\r\n\r\n            <Pagehead><Heading>versions.json</Heading></Pagehead>\r\n            <BranchName>versions.json</BranchName> is a json file that contains all known versions of the Discord Game Sdk and label data indicating versions for the above labels.\r\n            <br/>\r\n            The file is located at <BranchName><Link href=\"https://discord.joezwet.dev/versions.json\" target={\"_blank\"}>https://discord.joezwet.dev/versions.json</Link></BranchName>.\r\n            <br/>\r\n            <br/>\r\n\r\n            The specification for this file is as follows:\r\n            <ul>\r\n              <li><BranchName>labels</BranchName> a single <BranchName>labels</BranchName> object.</li>\r\n              <li><BranchName>versions</BranchName> a list of <BranchName>version</BranchName> objects.</li>\r\n            </ul>\r\n            <br/>\r\n            <BranchName>version</BranchName> object:\r\n            <ul>\r\n              <li><BranchName>versions</BranchName> the version of this version.</li>\r\n              <li><BranchName>md5</BranchName> the md5 hash of the zip for this version.</li>\r\n              <li><BranchName>publish</BranchName> an ISO string of the version's publish date.</li>\r\n              <li><BranchName>size</BranchName> the size of the version's zip in mb.</li>\r\n            </ul>\r\n            <br/>\r\n            <BranchName>labels</BranchName> object:\r\n            <ul>\r\n              <li><BranchName>latest</BranchName> the version listed as latest by Discord.</li>\r\n              <li><BranchName>recommended</BranchName> the version recommended for production use by Discord.</li>\r\n              <li><BranchName>bleeding</BranchName> the bleeding edge version, not recommended for production use.</li>\r\n            </ul>\r\n\r\n            <Pagehead><Heading>Author</Heading></Pagehead>\r\n            The author of the site is <del>currently</del> not affiliated with Discord, Inc.\r\n            <br/>\r\n            The developer, <Link href=\"https://joezwet.me\" target={\"_blank\"}>Joe van der Zwet</Link>, can be contacted at <BranchName><Link href=\"mailto:contact@joezwet.me\" target={\"_blank\"}>contact@joezwet.me</Link></BranchName> or <BranchName>JoeZwet#0001</BranchName> on Discord.\r\n          </Box>\r\n          <Box/>\r\n        </Grid>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport LabelsData from \"../data/LabelsData\";\r\nimport VersionData from \"../data/VersionData\";\r\nimport {Label} from \"@primer/components\";\r\n\r\ninterface VersionLabelsProps {\r\n  version: VersionData,\r\n  labels: LabelsData,\r\n}\r\n\r\nconst VersionLabels: React.FC<VersionLabelsProps> = (props) => {\r\n  return (\r\n    <>\r\n      {props.version.version === props.labels.latest && (<Label variant=\"medium\" bg=\"#6f42c1\" m={1}>Latest</Label>)}\r\n      {props.version.version === props.labels.recommended && (<Label key=\"recommended\" variant=\"medium\" bg=\"#28a745\" m={1}>Recommended</Label>)}\r\n      {props.version.version === props.labels.bleeding && (<Label key=\"bleeding\" variant=\"medium\" bg=\"#d73a49\" m={1}>Bleeding Edge</Label>)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VersionLabels;","import React from \"react\";\r\nimport {BranchName, Link, StyledOcticon, Timeline, Tooltip, Text} from \"@primer/components\";\r\nimport {BeakerIcon, DownloadIcon, Icon, MilestoneIcon, TagIcon, ZapIcon} from \"@primer/octicons-react\";\r\nimport VersionLabels from \"./VersionLabels\";\r\nimport VersionData from \"../data/VersionData\";\r\nimport LabelsData from \"../data/LabelsData\";\r\n\r\ninterface TimelineVersionProps {\r\n  version: VersionData,\r\n  labels: LabelsData\r\n}\r\n\r\nconst TimelineVersion: React.FC<TimelineVersionProps> = (props) => {\r\n  let bg: null | string = null;\r\n  let color: null | string = null;\r\n  let icon: Icon = TagIcon;\r\n\r\n  switch (props.version.type) {\r\n    case \"DEFAULT\":\r\n      bg = null;\r\n      color = null;\r\n      icon = TagIcon;\r\n      break;\r\n    case \"RECOMMENDED\":\r\n      bg = \"prState.open.bg\";\r\n      color = \"prState.open.text\";\r\n      icon = ZapIcon;\r\n      break;\r\n    case \"LATEST\":\r\n      bg = \"prState.merged.bg\";\r\n      color = \"prState.merged.text\";\r\n      icon = MilestoneIcon;\r\n      break;\r\n    case \"BLEEDING\":\r\n      bg = \"prState.closed.bg\";\r\n      color = \"prState.closed.text\";\r\n      icon = BeakerIcon;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Timeline.Item>\r\n      <Timeline.Badge bg={bg}>\r\n        <StyledOcticon icon={icon} color={color}/>\r\n      </Timeline.Badge>\r\n      <Timeline.Body>\r\n        <Link href={`https://dl-game-sdk.discordapp.net/${props.version.version}/discord_game_sdk.zip`} target=\"_blank\" fontWeight=\"bold\" color=\"text.primary\" mr={1} muted>\r\n          <StyledOcticon icon={DownloadIcon} />\r\n          v{props.version.version}\r\n        </Link>\r\n        was released <Text fontWeight=\"bold\" color=\"timeline.text\">\r\n        <Tooltip direction=\"s\" aria-label={props.version.publish.toISOString()}>{props.version.publish.toLocaleDateString(navigator.language,\r\n          { year: \"numeric\", month: \"long\", day: \"numeric\" })}</Tooltip></Text>\r\n        <VersionLabels version={props.version} labels={props.labels} />\r\n        <br /><BranchName>md5/{props.version.md5}</BranchName> <BranchName>size/{Math.round((props.version.size) * 100) / 100}mb</BranchName>\r\n      </Timeline.Body>\r\n    </Timeline.Item>\r\n  )\r\n}\r\n\r\nexport default TimelineVersion;","class VersionData {\r\n  type: string;\r\n  version: string;\r\n  md5: string;\r\n  size: number;\r\n  publish: Date;\r\n\r\n  constructor(type: string, version: string, md5: string, size: number, publish: Date) {\r\n    this.type = type;\r\n    this.version = version;\r\n    this.md5 = md5;\r\n    this.size = size;\r\n    this.publish = publish;\r\n  }\r\n}\r\n\r\nexport default VersionData;","class LabelsData {\r\n  latest: string;\r\n  recommended: string;\r\n  bleeding: string;\r\n\r\n  constructor(latest: string, recommended: string, bleeding: string) {\r\n    this.latest = latest;\r\n    this.recommended = recommended;\r\n    this.bleeding = bleeding;\r\n  }\r\n}\r\n\r\nexport default LabelsData;","import React, {useEffect} from \"react\";\r\nimport TimelineVersion from \"../components/TimelineVersion\";\r\nimport {Box, Grid, Heading, Pagehead, Timeline} from \"@primer/components\";\r\nimport SiteHeader from \"../components/SiteHeader\";\r\nimport VersionData from \"../data/VersionData\";\r\nimport LabelsData from \"../data/LabelsData\";\r\n\r\n\r\nconst Versions: React.FC = () => {\r\n  const [items, setItems] = React.useState<Array<any>>([]);\r\n  const [labels, setLabels] = React.useState<LabelsData>(new LabelsData(\"0\", \"0\", \"0\"));\r\n\r\n  useEffect(() => {\r\n    const itemsTemp: Array<VersionData> = [];\r\n    let tempLabels: LabelsData | null = null;\r\n\r\n    fetch(\"/versions.json\").then(res => res.json()).then(json => {\r\n      tempLabels = new LabelsData(json.labels.latest, json.labels.recommended, json.labels.bleeding);\r\n\r\n      json.versions.forEach((item: any) => {\r\n        itemsTemp.push(new VersionData(\r\n          getTypeForVersion(item.version, tempLabels),\r\n          item.version,\r\n          item.md5,\r\n          item.size,\r\n          new Date(item.publish)))\r\n      });\r\n\r\n      setLabels(tempLabels);\r\n      setItems(itemsTemp.reverse);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SiteHeader />\r\n      <Grid padding={40} gridGap={3} gridTemplateColumns=\"20% auto 20%\" gridTemplateRows=\"auto\">\r\n        <Box />\r\n        <Box>\r\n          <Pagehead><Heading>Versions</Heading></Pagehead>\r\n          <Timeline clipSidebar={true}>\r\n            {\r\n             mapVersionsToTimelineItem(items, labels)\r\n            }\r\n          </Timeline>\r\n        </Box>\r\n        <Box/>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nconst getTypeForVersion = (version: string, labels: LabelsData | null | undefined) => {\r\n  if(labels === null || labels === undefined) return \"DEFAULT\";\r\n  switch (version) {\r\n    case labels.latest: {\r\n      return \"LATEST\";\r\n    }\r\n    case labels.bleeding: {\r\n      return \"BLEEDING\";\r\n    }\r\n    case labels.recommended: {\r\n      return \"RECOMMENDED\";\r\n    }\r\n    default: {\r\n      return \"DEFAULT\";\r\n    }\r\n  }\r\n}\r\n\r\nconst mapVersionsToTimelineItem = (versions: Array<VersionData>, labels: LabelsData) => {\r\n  return versions.map((value: VersionData) => <TimelineVersion key={value.version} version={value} labels={labels} />);\r\n}\r\n\r\nexport default Versions;","import React from \"react\";\r\nimport SiteHeader from \"../components/SiteHeader\";\r\nimport {Box, Grid, Heading, Link, Pagehead} from \"@primer/components\";\r\n\r\nconst Packages: React.FC = () => {\r\n\r\n  return (\r\n    <>\r\n      <SiteHeader />\r\n      <Grid padding={40} gridGap={3} gridTemplateColumns=\"20% auto 20%\" gridTemplateRows=\"auto\">\r\n        <Box />\r\n        <Box>\r\n          <Pagehead><Heading>Packages</Heading></Pagehead>\r\n          This page is currently in development but will eventually contain a comprehensive list of third-party wrappers and\r\n          re-packages of the Discord Game Sdk.\r\n\r\n          <br />\r\n          If you're a developer who has something that would fit this page, please create an issue on <Link href={\"https://github.com/JoeZwet/discord.joezwet.dev/issues/new\"} target={\"_blank\"}>Github</Link>.\r\n        </Box>\r\n        <Box />\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Packages;","import React from \"react\";\nimport {BaseStyles, ThemeProvider} from \"@primer/components\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Versions from \"./pages/Versions\";\nimport Packages from \"./pages/Packages\";\n\nfunction App() {\n  return (\n    <>\n      <ThemeProvider>\n        <BaseStyles>\n          <Router basename={\"/\"}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/versions\" component={Versions} />\n              <Route exact path=\"/packages\" component={Packages} />\n            </Switch>\n          </Router>\n        </BaseStyles>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}