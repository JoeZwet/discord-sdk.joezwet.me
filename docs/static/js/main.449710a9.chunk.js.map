{"version":3,"sources":["app/components/SiteHeader.tsx","app/pages/Home.tsx","app/components/VersionLabels.tsx","app/components/TimelineVersion.tsx","app/data/VersionData.ts","app/data/LabelsData.ts","app/pages/Versions.tsx","app/components/Package.tsx","app/pages/Packages.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SiteHeader","Item","Link","href","fontSize","icon","RocketIcon","size","mr","full","HomeIcon","TagIcon","PackageIcon","MarkGithubIcon","Home","padding","gridGap","gridTemplateColumns","gridTemplateRows","target","variant","bg","m","VersionLabels","props","version","labels","latest","recommended","bleeding","TimelineVersion","color","type","ZapIcon","MilestoneIcon","BeakerIcon","Badge","Body","fontWeight","muted","DownloadIcon","direction","aria-label","publish","toISOString","toLocaleDateString","navigator","language","year","month","day","md5","Math","round","VersionData","this","LabelsData","getTypeForVersion","undefined","mapVersionsToTimelineItem","versions","map","value","Versions","React","useState","items","setItems","setLabels","useEffect","itemsTemp","tempLabels","fetch","then","res","json","forEach","item","push","Date","reverse","clipSidebar","Package","Fragment","style","source","name","author","description","tags","tag","Packages","data","tempItems","catch","console","error","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.449710a9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Header, StyledOcticon } from \"@primer/components\";\nimport {HomeIcon, MarkGithubIcon, PackageIcon, RocketIcon, TagIcon} from \"@primer/octicons-react\";\n\nconst SiteHeader: React.FC = () => {\n    return (\n        <>\n            <Header>\n                <Header.Item>\n                    <Header.Link href=\"#/\" fontSize={2}>\n                        <StyledOcticon icon={RocketIcon} size={32} mr={2}/>\n                        <span>Discord Game Sdk</span>\n                    </Header.Link>\n                </Header.Item>\n                <Header.Item full />\n                <Header.Item>\n                    <Header.Link href=\"#/\" fontSize={2}>\n                        <StyledOcticon icon={HomeIcon} size={16} mr={2}/>\n                        <span>Home</span>\n                    </Header.Link>\n                </Header.Item>\n                <Header.Item>\n                    <Header.Link href=\"#/versions\" fontSize={2}>\n                        <StyledOcticon icon={TagIcon} size={16} mr={2}/>\n                        <span>Versions</span>\n                    </Header.Link>\n                </Header.Item>\n                <Header.Item>\n                    <Header.Link href=\"#/packages\" fontSize={2}>\n                        <StyledOcticon icon={PackageIcon} size={16} mr={2}/>\n                        <span>Packages</span>\n                    </Header.Link>\n                </Header.Item>\n                <Header.Item>\n                    <Header.Link href=\"https://github.com/joezwet/discord.joezwet.dev\" fontSize={2}>\n                        <StyledOcticon icon={MarkGithubIcon} size={16} mr={2}/>\n                        <span>Source</span>\n                    </Header.Link>\n                </Header.Item>\n            </Header>\n        </>\n    );\n}\n\nexport default SiteHeader;","import React from \"react\";\nimport SiteHeader from \"../components/SiteHeader\";\nimport {Box, BranchName, Grid, Heading, Label, Link, Pagehead} from \"@primer/components\";\n\nconst Home: React.FC = () => {\n    return (\n      <>\n        <SiteHeader />\n        <Grid padding={40} gridGap={3} gridTemplateColumns=\"20% auto 20%\" gridTemplateRows=\"auto\">\n          <Box />\n          <Box>\n            <Pagehead><Heading>About</Heading></Pagehead>\n            <p>This website is an unofficial listing of known <Link href=\"https://discord.com/developers/docs/game-sdk/getting-started\" target=\"_blank\">\n              Discord Game Sdk</Link> versions and third-party, open-sourced packages that re-bundle the sdk for all kinds of platforms.\n              The versions list was last checked for updates on the 30th of March 2021, at 10:19pm NZST.\n              <br/><br/>\n              An explanation of version tags:\n              <ul>\n                <li><Label variant=\"medium\" bg=\"#6f42c1\" m={1}>Latest</Label> This tag represents the version listed by Discord as latest, indicated by using <BranchName>latest</BranchName> in the download url.</li>\n                <li><Label key=\"recommended\" variant=\"medium\" bg=\"#28a745\" m={1}>Recommended</Label> This is the version recommended for use by Discord, check the <BranchName>#gamesdk-and-dispatch-announcements</BranchName> channel in the Discord Developers server for more info.</li>\n                <li><Label key=\"bleeding\" variant=\"medium\" bg=\"#d73a49\" m={1}>Bleeding Edge</Label> This is the absolute latest version, found by querying versions incrementally till no more can be found.</li>\n              </ul>\n            </p>\n\n            <Pagehead><Heading>versions.json</Heading></Pagehead>\n            <BranchName>versions.json</BranchName> is a json file that contains all known versions of the Discord Game Sdk and label data indicating versions for the above labels.\n            <br/>\n            The file is located at <BranchName><Link href=\"https://discord.joezwet.dev/versions.json\" target={\"_blank\"}>https://discord.joezwet.dev/versions.json</Link></BranchName>.\n            <br/>\n            <br/>\n\n            The specification for this file is as follows:\n            <ul>\n              <li><BranchName>labels</BranchName> a single <BranchName>labels</BranchName> object.</li>\n              <li><BranchName>versions</BranchName> a list of <BranchName>version</BranchName> objects.</li>\n            </ul>\n            <br/>\n            <BranchName>version</BranchName> object:\n            <ul>\n              <li><BranchName>versions</BranchName> the version of this version.</li>\n              <li><BranchName>md5</BranchName> the md5 hash of the zip for this version.</li>\n              <li><BranchName>publish</BranchName> an ISO string of the version's publish date.</li>\n              <li><BranchName>size</BranchName> the size of the version's zip in mb.</li>\n            </ul>\n            <br/>\n            <BranchName>labels</BranchName> object:\n            <ul>\n              <li><BranchName>latest</BranchName> the version listed as latest by Discord.</li>\n              <li><BranchName>recommended</BranchName> the version recommended for production use by Discord.</li>\n              <li><BranchName>bleeding</BranchName> the bleeding edge version, not recommended for production use.</li>\n            </ul>\n\n            <Pagehead><Heading>Author</Heading></Pagehead>\n            The author of the site is not affiliated with Discord, Inc.<br/>\n            The developer, <Link href=\"https://joezwet.me\" target={\"_blank\"}>Joe van der Zwet</Link>, can be contacted at <BranchName><Link href=\"mailto:contact@joezwet.me\" target={\"_blank\"}>contact@joezwet.me</Link></BranchName> or <BranchName>JoeZwet#0001</BranchName> on Discord.\n          </Box>\n          <Box/>\n        </Grid>\n      </>\n    );\n}\n\nexport default Home;","import React from \"react\";\nimport LabelsData from \"../data/LabelsData\";\nimport VersionData from \"../data/VersionData\";\nimport {Label} from \"@primer/components\";\n\ninterface VersionLabelsProps {\n  version: VersionData,\n  labels: LabelsData,\n}\n\nconst VersionLabels: React.FC<VersionLabelsProps> = (props) => {\n  return (\n    <>\n      {props.version.version === props.labels.latest && (<Label variant=\"medium\" bg=\"#6f42c1\" m={1}>Latest</Label>)}\n      {props.version.version === props.labels.recommended && (<Label key=\"recommended\" variant=\"medium\" bg=\"#28a745\" m={1}>Recommended</Label>)}\n      {props.version.version === props.labels.bleeding && (<Label key=\"bleeding\" variant=\"medium\" bg=\"#d73a49\" m={1}>Bleeding Edge</Label>)}\n    </>\n  )\n}\n\nexport default VersionLabels;","import React from \"react\";\nimport {BranchName, Link, StyledOcticon, Timeline, Tooltip, Text} from \"@primer/components\";\nimport {BeakerIcon, DownloadIcon, Icon, MilestoneIcon, TagIcon, ZapIcon} from \"@primer/octicons-react\";\nimport VersionLabels from \"./VersionLabels\";\nimport VersionData from \"../data/VersionData\";\nimport LabelsData from \"../data/LabelsData\";\n\ninterface TimelineVersionProps {\n  version: VersionData,\n  labels: LabelsData\n}\n\nconst TimelineVersion: React.FC<TimelineVersionProps> = (props) => {\n  let bg: null | string = null;\n  let color: null | string = null;\n  let icon: Icon = TagIcon;\n\n  switch (props.version.type) {\n    case \"DEFAULT\":\n      bg = null;\n      color = null;\n      icon = TagIcon;\n      break;\n    case \"RECOMMENDED\":\n      bg = \"prState.open.bg\";\n      color = \"prState.open.text\";\n      icon = ZapIcon;\n      break;\n    case \"LATEST\":\n      bg = \"prState.merged.bg\";\n      color = \"prState.merged.text\";\n      icon = MilestoneIcon;\n      break;\n    case \"BLEEDING\":\n      bg = \"prState.closed.bg\";\n      color = \"prState.closed.text\";\n      icon = BeakerIcon;\n      break;\n  }\n\n  return (\n    <Timeline.Item>\n      <Timeline.Badge bg={bg}>\n        <StyledOcticon icon={icon} color={color}/>\n      </Timeline.Badge>\n      <Timeline.Body>\n        <Link href={`https://dl-game-sdk.discordapp.net/${props.version.version}/discord_game_sdk.zip`} target=\"_blank\" fontWeight=\"bold\" color=\"text.primary\" mr={1} muted>\n          <StyledOcticon icon={DownloadIcon} />\n          v{props.version.version}\n        </Link>\n        was released <Text fontWeight=\"bold\" color=\"timeline.text\">\n        <Tooltip direction=\"s\" aria-label={props.version.publish.toISOString()}>{props.version.publish.toLocaleDateString(navigator.language,\n          { year: \"numeric\", month: \"long\", day: \"numeric\" })}</Tooltip></Text>\n        <VersionLabels version={props.version} labels={props.labels} />\n        <br /><BranchName>md5/{props.version.md5}</BranchName> <BranchName>size/{Math.round((props.version.size) * 100) / 100}mb</BranchName>\n      </Timeline.Body>\n    </Timeline.Item>\n  )\n}\n\nexport default TimelineVersion;","class VersionData {\n  type: string;\n  version: string;\n  md5: string;\n  size: number;\n  publish: Date;\n\n  constructor(type: string, version: string, md5: string, size: number, publish: Date) {\n    this.type = type;\n    this.version = version;\n    this.md5 = md5;\n    this.size = size;\n    this.publish = publish;\n  }\n}\n\nexport default VersionData;","class LabelsData {\n  latest: string;\n  recommended: string;\n  bleeding: string;\n\n  constructor(latest: string, recommended: string, bleeding: string) {\n    this.latest = latest;\n    this.recommended = recommended;\n    this.bleeding = bleeding;\n  }\n}\n\nexport default LabelsData;","import React, {useEffect} from \"react\";\nimport TimelineVersion from \"../components/TimelineVersion\";\nimport {Box, Grid, Heading, Pagehead, Timeline} from \"@primer/components\";\nimport SiteHeader from \"../components/SiteHeader\";\nimport VersionData from \"../data/VersionData\";\nimport LabelsData from \"../data/LabelsData\";\n\n\nconst Versions: React.FC = () => {\n  const [items, setItems] = React.useState<Array<any>>([]);\n  const [labels, setLabels] = React.useState<LabelsData>(new LabelsData(\"0\", \"0\", \"0\"));\n\n  useEffect(() => {\n    const itemsTemp: Array<VersionData> = [];\n    let tempLabels: LabelsData | null = null;\n\n    fetch(\"/versions.json\").then(res => res.json()).then(json => {\n      tempLabels = new LabelsData(json.labels.latest, json.labels.recommended, json.labels.bleeding);\n\n      json.versions.forEach((item: any) => {\n        itemsTemp.push(new VersionData(\n          getTypeForVersion(item.version, tempLabels),\n          item.version,\n          item.md5,\n          item.size,\n          new Date(item.publish)))\n      });\n\n      setLabels(tempLabels);\n      setItems(itemsTemp.reverse());\n    });\n  }, []);\n\n  return (\n    <>\n      <SiteHeader />\n      <Grid padding={40} gridGap={3} gridTemplateColumns=\"20% auto 20%\" gridTemplateRows=\"auto\">\n        <Box />\n        <Box>\n          <Pagehead><Heading>Versions</Heading></Pagehead>\n          <Timeline clipSidebar={true}>\n            {\n             mapVersionsToTimelineItem(items, labels)\n            }\n          </Timeline>\n        </Box>\n        <Box/>\n      </Grid>\n    </>\n  )\n}\n\nconst getTypeForVersion = (version: string, labels: LabelsData | null | undefined) => {\n  if(labels === null || labels === undefined) return \"DEFAULT\";\n  switch (version) {\n    case labels.latest: {\n      return \"LATEST\";\n    }\n    case labels.bleeding: {\n      return \"BLEEDING\";\n    }\n    case labels.recommended: {\n      return \"RECOMMENDED\";\n    }\n    default: {\n      return \"DEFAULT\";\n    }\n  }\n}\n\nconst mapVersionsToTimelineItem = (versions: Array<VersionData>, labels: LabelsData) => {\n  return versions.map((value: VersionData) => <TimelineVersion key={value.version} version={value} labels={labels} />);\n}\n\nexport default Versions;","import React from \"react\";\nimport {BorderBox, BranchName, Label, LabelGroup, Link} from \"@primer/components\";\n\ninterface PackageProps {\n  name: string,\n  description: string,\n  source: string,\n  author: string,\n  tags: Array<string>\n}\n\nconst Package: React.FC<PackageProps> = (props: PackageProps) => {\n  return (\n    <React.Fragment>\n      <BorderBox>\n        <div style={{padding: \"6px\"}}>\n          <BranchName><Link href={props.source} target={\"_blank\"}>{props.name}</Link></BranchName>\n          <br/> by {props.author}\n          <br/>\n          {props.description}\n          <br/>\n          <LabelGroup>\n            { props.tags.map((tag: string) => (<Label key={tag}>{tag}</Label>)) }\n          </LabelGroup>\n        </div>\n      </BorderBox>\n    </React.Fragment>\n  )\n}\n\nexport default Package;","import React from \"react\";\nimport SiteHeader from \"../components/SiteHeader\";\nimport {Box, Grid, Heading, Link, Pagehead} from \"@primer/components\";\nimport Package from \"../components/Package\";\n\nconst Packages: React.FC = () => {\n  const [items, setItems] = React.useState<Array<any>>([])\n\n  fetch(\"/packages.json\")\n    .then(res => res.json())\n    .then((data: any[]) => {\n      const tempItems: any[] = [];\n      data.forEach((item: any) => {\n        tempItems.push(<Package key={item.name} name={item.name} description={item.description} source={item.source} author={item.author} tags={item.tags} />);\n      });\n      setItems(tempItems);\n    })\n    .catch(console.error);\n\n  return (\n    <>\n      <SiteHeader />\n      <Grid padding={40} gridGap={3} gridTemplateColumns=\"20% auto 20%\" gridTemplateRows=\"auto\">\n        <Box />\n        <Box>\n          <Pagehead><Heading>Packages</Heading></Pagehead>\n          If you're a developer who has something that would fit this page, create an issue on <Link href={\"https://github.com/JoeZwet/discord.joezwet.dev/issues/new\"} target={\"_blank\"}>Github</Link>.\n          <br/>\n          Please note that only open-sourced projects will be added, we are not accepting closed-sourced projects at this time.\n        </Box>\n        <Box/>\n\n        <Box/>\n        <Grid gridGap={3} gridTemplateColumns={\"repeat(2, 1fr)\"}>\n          { items }\n        </Grid>\n        <Box />\n      </Grid>\n    </>\n  )\n}\n\nexport default Packages;","import React from \"react\";\nimport {BaseStyles, ThemeProvider} from \"@primer/components\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Versions from \"./pages/Versions\";\nimport Packages from \"./pages/Packages\";\n\nfunction App() {\n  return (\n    <>\n      <ThemeProvider>\n        <BaseStyles>\n          <Router basename={\"/\"}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/versions\" component={Versions} />\n              <Route exact path=\"/packages\" component={Packages} />\n            </Switch>\n          </Router>\n        </BaseStyles>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}